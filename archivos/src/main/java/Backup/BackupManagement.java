/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Backup;

import java.io.*;
import javax.swing.*;
import Access.Usuario;
import Backup.HandleFile;
import Admin.Admin;
import Data.Data;
import java.awt.Toolkit;
/**
 *
 * @author llaaj
 */
public class BackupManagement extends javax.swing.JFrame {

    /**
     * Creates new form BackupManagement
     */
    public BackupManagement() {
        initComponents();
        setIcon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        TFRoute = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Explorar");
        jButton1.setToolTipText("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        TFRoute.setEditable(false);

        jButton2.setText("Comenzar Backup");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Regresar");
        jButton3.setToolTipText("");
        jButton3.setActionCommand("Return");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(TFRoute, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(TFRoute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Abre el diálogo de selección de carpeta para escoger en cuál carpeta
     * almacenar el backup
     * @param evt 
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser dialogo = new JFileChooser();
        dialogo.setCurrentDirectory(new java.io.File("."));
        dialogo.setDialogTitle("Escoge una carpeta para realizar el backup");
        dialogo.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY); // configurar para solo escoger directorios y no ficheros
        dialogo.setAcceptAllFileFilterUsed(false);
        
        File backupDirectory;
        String directoryPath;
        int valor = dialogo.showOpenDialog(this);
        
        if (valor == JFileChooser.APPROVE_OPTION) {
            backupDirectory = dialogo.getSelectedFile();
            directoryPath = backupDirectory.getPath();
            TFRoute.setText(directoryPath + "\\MEIA_Backup"); // se creará MEIA_Backup en el directorio escogido
        }
        
        if (TFRoute.getText().length() > 200) { // no permite rutas más grandes que 200 caracteres
            JOptionPane.showMessageDialog(null, 
                    "La ruta no debe exceder de los 200 caracteres");
            TFRoute.setText("");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * Disparador de los eventos de backup
     * @param evt 
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String pathOrigen = "C:\\MEIA";
        String pathDestino = TFRoute.getText();
        
        if (!pathDestino.equals("")) {
            Usuario usuario = Data.Instance().user;
            HandleFile hf = new HandleFile();
            //hf.HandleBitacora(usuario.getUsuario(), pathDestino);
            hf.HandleBitacora(usuario.getUsuario(), pathDestino);
            
            copiarDirectorios(new File(pathOrigen), new File(pathDestino));
            
            JOptionPane.showMessageDialog(null, 
                    "Backup realizado exitosamente");
        }
        else {
            JOptionPane.showMessageDialog(null, 
                    "La ruta escogida no es válida");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * Regresa a la vista de Administración de usuarios
     * @param evt 
     */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        setVisible(false);
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed
    
    /**
     * Recorre recursivamente los directorios y ficheros del directorio origen d1
     * y los copia al directorio destino d2
     * @param d1 Directorio origen
     * @param d2 Directorio destino
     */
    private void copiarDirectorios(File d1, File d2){
        try {
            if (d1.isDirectory()) {
                if (!d2.exists()) {
                    d2.mkdir(); // si d2 no existe, lo crea
                }
            
                String[] ficheros = d1.list();
                for (int i=0; i < d1.list().length; i++) {
                    copiarDirectorios(new File(d1, ficheros[i]),
                        new File(d2, ficheros[i]));
                }
            }
            else {
                copiarFicheros(d1, d2);
            }
        } catch(Exception e){
            System.out.println(e);
        }
       
    }
    
    /**
     * Copia los ficheros encontrados en los directorios
     * @param f1 Fichero origen
     * @param f2 Fichero destino
     */
    private void copiarFicheros(File f1, File f2){
        try {
            InputStream in = new FileInputStream(f1);
            OutputStream out = new FileOutputStream(f2);

            byte[] buf = new byte[1024];
            int len;

            while ((len = in.read(buf)) > 0) {
              out.write(buf, 0, len);
            }

            in.close();
            out.close();

        } catch (IOException ioe){
            ioe.printStackTrace();
        }
    }
    
    private void setIcon(){
        ImageIcon img = new ImageIcon("C:\\MEIA\\Imagenes\\icon.jpg");
        this.setIconImage(img.getImage());    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BackupManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BackupManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BackupManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BackupManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BackupManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TFRoute;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    // End of variables declaration//GEN-END:variables
}
